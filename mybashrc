.Nothing at the moment just using the defaults settings

# Mk-0-wan
# ~/.bashrc
#
# If not running interactively, don't do anything
[[ $- != *i* ]] && return

#------------------------------#
#	GLOBAL VARIABLE	
#------------------------------#
ARG1=$1
ARG2=$2

#---------------------------------------# 
# Set color variables
export BLACK="\[\e[0;30m\]"
export DARK_GRAY="\[\e[1;30m\]"
export RED="\[\e[0;31m\]"
export YELLOW="\[\e[0;33m\]"
export PURPLE="\[\e[1;34m\]"
export BLUE="\[\e[0;34m\]"
export LIGHT_BLUE="\[\e[1;34m\]"
export GREEN="\[\e[0;32m\]"
export LIGHT_GREEN="\[\e[1;32m\]"
export CYAN="\[\e[0;36m\]"
export LIGHT_CYAN="\[\e[1;36m\]"
export LIGHT_RED="\[\e[1;31m\]"
export PURPLE="\[\e[0;34m\]"
export LIGHT_PURPLE="\[\e[1;35m\]"
export BROWN="\[\e[0;33m\]"
export LIGHT_GRAY="\[\e[0;37m\]Hello"
export WHITE="\[\e[1;37m\]"
#---------------------------------------# 
# Bash Aliases
alias ls='ls --color=auto'
alias pip=penv
alias conf='cd ~/.config/nvim/'
alias env=environment_activator
alias fix=fix
alias grep='grep --color=auto'
alias vi='nvim'
alias conf='cd $HOME/.config/nvim/lua'
alias ll='ls -la'
alias vb='nvim ~/.bashrc'
alias nv='vim'
alias vconf='nvim ~/.config/nvim/lua/maps.lua'
alias pac='sudo pacman -Syy'
alias pkg=package_list
alias install=param
alias search=search_package
alias pl=pycode_style_checker
alias bl=betty_style_checker
alias py='python3 -q'
alias lv=level_deep
alias update='git pull'
alias lgit='exa --long --header --inode --git'
alias ls='exa --icons'
alias gc=git_checkout_braches
alias vm=multipile_files 
alias ds=delete_swap_files
alias gt='bash ~/.config/gt.sh'
alias val=valgrind_checker
alias ts=task
alias fl=create_open_executable_file
alias bug="nvim +\$1 \$2"
#----------------------------------------# 
# Functions
function level_deep {
	exa --long --tree --level="${1:-1}"
}

param() { 
	sudo pacman -S --verbose "$1"
}

search_package() { 
	sudo pacman -Ss --verbose "$1"
}

pycode_style_checker() {
	pycodestlye "$1"
}

betty_style_checker() {
	betty "$1"
}

git_checkout_braches() {
	git checkout "$1"
}

multipile_files() {
	nvim -O "$@"
}

fix() {
	semistandard --fix "$1"
}
valgrind_checker() {
	valgrind -s --leak-check=full --track-origins=yes --show-leak-kinds=all "$ARG1"
}

function task {
	echo -n "High, Low or project[xs, ] -> "
	read -r dir
	case $dir in
		High)
			cd "$HOME/work/alx-higher_level_programming" || return
			;;
		Low)
			cd "$HOME/work/alx-low_level_programming" || return
			;;
		*)
			echo "Invalid alx directory" || return 1
			;;
	esac
	echo -n "Which task -> "
	read -r tasks
	cd "$tasks"
}

function penv {
	printf "%s\n" "Setting up for you sir you should be ready to make use of pip all in one go"
	arg="$1"
	case $arg in
		0)
			python -m pip completion --bash >> ~/.profile || return 1
			;;
		1)
			python3 -m pip list || return 1
			;;
		2)
			python3 -m pip list --outdated || return 1
			;;
		3)
			echo "Additional argument required"
			sleep 1
			python3 -m pip show "$ARG2" || return 1
			;;
		4)
			python3 -m pip install "$ARG2" || return 1
			;;
		5)
			python3 -m pip uninstall "$ARG2" || return 1
			;;
		*)
			printf "%s\n"  "invalid option" || return 1
			;;
	esac
}
delete_swap_files() {
	rm -vr ~/.local/state/nvim/swap//%home%archmk%"$1".swp
}
#--------------------------------------------#
# Profile
export PS1="${BLUE}[\t]:\`nonzero_return\`\n${YELLOW}\W\[\e[m\]\[\e[32m\]\`parse_git_branch\`\[\e[m\] "

# get current branch in git repo
function parse_git_branch() {
	BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
	if [ ! "${BRANCH}" == "" ]
	then
		STAT=`parse_git_dirty`
		echo "[${BRANCH}${STAT}]"
	else
		echo ""
	fi
}
# get current status of git repo
function parse_git_dirty {
	status=`git status 2>&1 | tee`
	dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
	untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
	ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
	newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
	renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
	deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
	bits=''
	if [ "${renamed}" == "0" ]; then
		bits="\udb81\udeb0${bits}"
	fi
	if [ "${ahead}" == "0" ]; then
		bits="${bits}"
	fi
	if [ "${newfile}" == "0" ]; then
		bits="${bits}"
	fi
	if [ "${untracked}" == "0" ]; then
		bits="${bits}"
	fi
	if [ "${deleted}" == "0" ]; then
		bits="${bits}"
	fi
	if [ "${dirty}" == "0" ]; then
		bits="${bits}"
	fi
	if [ ! "${bits}" == "" ]; then
		echo " ${bits}"
	else
		echo ""
	fi
}
function nonzero_return() {
	RETVAL=$?
	[ $RETVAL -ne 0 ] && echo "$RETVAL"
}
function environment_activator {
	source "$1"/bin/activate
}

function create_open_executable_file {
	touch "$1"
	if test -f "$1"; then
		chmod +x "$1"
		nvim "$1"
	fi
}
